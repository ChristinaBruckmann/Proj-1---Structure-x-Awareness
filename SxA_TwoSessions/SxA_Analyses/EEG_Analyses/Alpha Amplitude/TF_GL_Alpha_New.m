%% GL Alpha Analysis with (correct) Error Bands
% SxA Group Level Alpha Analysis
% Plots also variance between subjects
% "Raw" alpha plots as well as differences between conditions
% Requires data to already be free of artifacts.

clear
clc

subj=[101:103 105:108 110:114 117:119];
alpharange=8:12;
basec=0;
catchonly=0;

% Load Data
for s=1:length(subj)
    cd 'C:\Users\cbruckmann\Documents\PhD Projects\Proj1 - StructurexAwareness\SxA_TwoSessions\SxA_Data\EEG Results\AlphaRes'
    if catchonly
        loadfilename=sprintf('EEG_SxA_Subj%i_AlphaResults_Catch.mat',subj(s));
    else
        loadfilename=sprintf('EEG_SxA_Subj%i_AlphaResults_clean.mat',subj(s));
    end
    gl_tf_timeVec(s)=load(loadfilename,'alpha_timeVecTotal');
    gl_alpha_wavFreqs(s)=load(loadfilename,'alpha_wavFreqs');
    subj_res=load(loadfilename,'alpha_Results'); 
    ntrials(s)=load(loadfilename,'alpha_ntrials');

    % array instead of struct
    for c=1:3
    tf_results(s,c,:,:,:)=cell2mat(subj_res.alpha_Results(c)); % subject x condition x time point x freq x electrodes
    end
end

% Average
alpha_results(:,:,:,:)=squeeze(mean(tf_results(:,:,:,alpharange,:),4)); % Select alpha-band only and average across alpha-frequencies (output: subj x cond x time point x electrodes)
alpha_results_avg(:,:,:)=squeeze(mean(alpha_results(:,:,:,:),4)); % average across electrodes

% Baseline Correct for each subject (?)
if basec
    if ~catchonly
        baselinetp=[0 100]; % baseline time points in relation to WS (WS at time point 0)
    else
        baselinetp=[-800 -700]; % baseline time points in relation to Target (Target at 0)
    end
    for s=1:size(alpha_results_avg,1)
        for c=1:3
            alpha_results_avg(s,c,:)=baselineCorrectSegmentedData(squeeze(alpha_results_avg(s,c,:)), gl_tf_timeVec(1).alpha_timeVecTotal{1, 1}, baselinetp);
        end
    end
end

%% Error Bars between Subjects for each condition separately
% Plot with error bars for each condition
figure;
colourvec=[0.00,0.45,0.74; 0.85,0.33,0.10;0.93,0.69,0.13];
for c=1:3
    data_to_plot=squeeze(alpha_results_avg(:,c,:)); % select condition data
    varplot(gl_tf_timeVec(1).alpha_timeVecTotal{1, 1},data_to_plot','linewidth',2,"color",colourvec(c,:));
    hold on;
end
xline(0,'--','Warning Signal');
xline(800,'--','Predicted Target');
xlabel("time (ms)")
ylabel("Band-Limited Alpha Amplitude (8-12 Hz)")
legend(['Rhythm','',"Interval",'','Irregular'])
if basec
    title("Alpha Suppression - Baseline Corrected")
else
    title("Alpha Suppression - Uncorrected")
end

% Plot without error bars 
figure;
data_to_plot=squeeze(mean(alpha_results_avg(:,:,:),1));
createfigure_alpha_novar(gl_tf_timeVec(1).alpha_timeVecTotal{1, 1}, data_to_plot)
%% Difference Bars
% Calculate differences between conditions for each participant

for s=1:size(alpha_results_avg,1)
    % Difference rhythm to irregular
    diff_rhy_irr(s,:)=alpha_results_avg(s,1,:)-alpha_results_avg(s,3,:); % rhy - irr
    % Difference interval to irregular
    diff_int_irr(s,:)=alpha_results_avg(s,2,:)-alpha_results_avg(s,3,:); % int - irr
end

% Plot with error bars
figure;
colourvec=[0.00,0.45,0.74; 0.85,0.33,0.10];

varplot(gl_tf_timeVec(1).alpha_timeVecTotal{1, 1},diff_rhy_irr','linewidth',2,"color",colourvec(1,:)); % diff rhythm-irr
hold on;
varplot(gl_tf_timeVec(1).alpha_timeVecTotal{1, 1},diff_int_irr','linewidth',2,"color",colourvec(2,:)); % diff interval-irr

xline(0,'--','Warning Signal');
xline(800,'--','Predicted Target');
yline(0)
xlabel("time (ms)")
ylabel("Alpha Amplitude (8-12 Hz) Difference")
legend(['Rhythm','',"Interval",''])
if basec
    title("Difference in Alpha Suppression - Baseline Corrected")
else
    title("Difference in Alpha Suppression - Uncorrected")
end


%% Figure Functions
function createfigure_alpha_novar(X1, YMatrix1)
%CREATEFIGURE(X1, YMatrix1)
%  X1:  vector of x data
%  YMATRIX1:  matrix of y data

%  Auto-generated by MATLAB on 23-May-2024 10:27:59

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,'Position',[0.112857142857143 0.0700000000000001 0.775 0.815000000000001]);
hold(axes1,'on');

% Create multiple lines using matrix input to plot
plot(X1,YMatrix1,'LineWidth',3,'Parent',axes1);

% set(plot1(1),'DisplayName','Rhythm');
% set(plot1(2),'DisplayName','Interval');
% set(plot1(3),'DisplayName','Irregular');

% Create xline
xline(0,'Parent',axes1,'Alpha',1,'LineStyle','--','LabelOrientation','horizontal','LineWidth',1,'FontSize',15,'Label','Warning Signal');

% Create matlab.graphics.interactor.ListOfPointsHighlight
%matlab.graphics.interactor.ListOfPointsHighlight('Visible','off','VertexData',zeros(3,0));

% Create xline
xline(800,'Parent',axes1,'Alpha',1,'LineStyle','--','LabelOrientation','horizontal','LineWidth',1,'FontSize',15,'Label','Predicted Target');

% % Create matlab.graphics.interactor.ListOfPointsHighlight
% matlab.graphics.interactor.ListOfPointsHighlight('Visible','off','VertexData',zeros(3,0));

% Create title
title('Alpha Power between WS and Target');

xlim(axes1,[-200 1500]);
hold(axes1,'off');
% Set the remaining axes properties
set(axes1,'FontSize',15,'XTick',[0 400 800 1200 1600]);
% Create legend
legend1 = legend(['Rhythm', 'Interval',"Irregular","",""]);
set(legend1,'Position',[0.660288949743352 0.582990712020913 0.158190580302694 0.132720591180465]);
end